"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–π
"""

import sqlite3
import shutil
from datetime import datetime

def backup_database():
    """–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_name = f"aditim-db_backup_{timestamp}.db"
    shutil.copy2("aditim-db.db", backup_name)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_name}")
    return backup_name

def migrate_database():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    backup_file = backup_database()
    
    try:
        conn = sqlite3.connect('aditim-db.db')
        cursor = conn.cursor()
        
        print("\nüìã –≠–¢–ê–ü 1: –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü (–ü–†–ê–í–ò–õ–û: –ï–î–ò–ù–°–¢–í–ï–ù–ù–û–ï –ß–ò–°–õ–û)...")
        
        # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é: dir_departament -> dir_department  
        print("  ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏: dir_departament -> dir_department")
        cursor.execute("ALTER TABLE dir_departament RENAME TO dir_department")
        
        # 2. –£—Ç–æ—á–Ω—è–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ: dir_queue_status -> dir_task_status
        print("  ‚Ä¢ –£—Ç–æ—á–Ω–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: dir_queue_status -> dir_task_status")
        cursor.execute("ALTER TABLE dir_queue_status RENAME TO dir_task_status")
        
        # 3. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ -> –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: dir_component_statuses -> dir_component_status")
        cursor.execute("ALTER TABLE dir_component_statuses RENAME TO dir_component_status")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: dir_tool_dimensions -> dir_tool_dimension")
        cursor.execute("ALTER TABLE dir_tool_dimensions RENAME TO dir_tool_dimension")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: dir_component_types -> dir_component_type")
        cursor.execute("ALTER TABLE dir_component_types RENAME TO dir_component_type")
        
        # 4. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ -> –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: profiles -> profile")
        cursor.execute("ALTER TABLE profiles RENAME TO profile")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: products -> product")
        cursor.execute("ALTER TABLE products RENAME TO product")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: profile_tools -> profile_tool")
        cursor.execute("ALTER TABLE profile_tools RENAME TO profile_tool")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: product_components -> product_component")
        cursor.execute("ALTER TABLE product_components RENAME TO product_component")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: profile_tools_components -> profile_tool_component")
        cursor.execute("ALTER TABLE profile_tools_components RENAME TO profile_tool_component")
        
        print("  ‚Ä¢ –ú–Ω.—á. -> –µ–¥.—á.: task_components -> task_component")
        cursor.execute("ALTER TABLE task_components RENAME TO task_component")
        
        # 5. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü")
        cursor.execute("DROP TABLE IF EXISTS dir_tool_dimensions")  # –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –¥—É–±–ª—å
        
        print("\nüìã –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π (id_* -> *_id)...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –≤ product (–±—ã–≤—à–µ–π products)
        print("  ‚Ä¢ product: id_departament -> department_id")
        cursor.execute("ALTER TABLE product RENAME COLUMN id_departament TO department_id")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –≤ task  
        print("  ‚Ä¢ task: id_departament -> department_id")
        cursor.execute("ALTER TABLE task RENAME COLUMN id_departament TO department_id")
        
        print("  ‚Ä¢ task: id_product -> product_id") 
        cursor.execute("ALTER TABLE task RENAME COLUMN id_product TO product_id")
        
        print("  ‚Ä¢ task: id_profile -> profile_id")
        cursor.execute("ALTER TABLE task RENAME COLUMN id_profile TO profile_id")
        
        print("  ‚Ä¢ task: id_status -> status_id")
        cursor.execute("ALTER TABLE task RENAME COLUMN id_status TO status_id")
        
        print("\nüìã –≠–¢–ê–ü 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã (Task -> ProfileTool –≤–º–µ—Å—Ç–æ Profile)...")
        
        print("  ‚Ä¢ task: profile_id -> profile_tool_id")
        cursor.execute("ALTER TABLE task RENAME COLUMN profile_id TO profile_tool_id")
        
        conn.commit()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏:")
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' ORDER BY name")
        tables = cursor.fetchall()
        for table in tables:
            print(f"  ‚úì {table[0]}")
            
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        print(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞ {backup_file}")
        shutil.copy2(backup_file, "aditim-db.db")
        return False

if __name__ == '__main__':
    success = migrate_database()
    if success:
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞.")
    else:
        print("\nüí• –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –±—ç–∫–∞–ø–∞.")
