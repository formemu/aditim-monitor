# main.py
import flet as ft
from datetime import date
from api_client import *

def main(page: ft.Page):
    page.title = "–û–ø–µ—Ä–∞—Ç–æ—Ä"
    page.vertical_spacing = 10

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ
    selected_work_type = None
    selected_machine = None

    # –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    work_type_dropdown = ft.Dropdown(label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è", options=[])
    machine_dropdown = ft.Dropdown(label="–°—Ç–∞–Ω–æ–∫", options=[])
    stage_list = ft.Column()

    def on_work_type_change(e):
        nonlocal selected_work_type
        try:
            selected_work_type = int(e.control.value)
        except (ValueError, TypeError):
            selected_work_type = None

        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω–∫–æ–≤, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞
        if selected_work_type is None:
            machine_dropdown.options = []  # üü© –ü–£–°–¢–û
            machine_dropdown.value = None
            machine_dropdown.hint_text = "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
        else:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞–Ω–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            machines = get_machines_by_work_type(selected_work_type)
            machine_dropdown.options = [
                ft.dropdown.Option(key=str(m["id"]), text=m["name"])
                for m in machines
            ]
            machine_dropdown.value = None
            machine_dropdown.hint_text = "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω–æ–∫"

        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç—Ç–∞–ø–æ–≤
        stage_list.controls.clear()
        page.update()

    def on_machine_change(e):
        nonlocal selected_machine
        selected_machine = int(e.control.value)
        load_stages()
        page.update()

    def load_stages():
        stage_list.controls = [ft.Text("–ó–∞–≥—Ä—É–∑–∫–∞...")]
        page.update()
        stages = get_stages_for_machine(selected_machine)
        stage_list.controls.clear()
        for stage in stages:
            start_btn = ft.ElevatedButton(
                "–í–∑—è–ª –≤ —Ä–∞–±–æ—Ç—É",
                disabled=stage["start"] is not None,
                on_click=lambda e, sid=stage["id"]: mark_start(sid),
            )
            finish_btn = ft.ElevatedButton(
                "–í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                disabled=stage["finish"] is not None,
                on_click=lambda e, sid=stage["id"]: mark_finish(sid),
            )
            stage_list.controls.append(
                ft.Card(
                    content=ft.Container(
                        padding=10,
                        content=ft.Column([
                            ft.Text(f"{stage['task_name']} ‚Äî {stage['component_name']}", weight=ft.FontWeight.BOLD),
                            ft.Text(f"–û–ø–µ—Ä–∞—Ü–∏—è: {stage['work_subtype']['name']}"),
                            ft.Text(f"Start: {stage['start'] or '‚Äî'}"),
                            ft.Text(f"Finish: {stage['finish'] or '‚Äî'}"),
                            ft.Row([start_btn, finish_btn])
                        ])
                    )
                )
            )
        page.update()

    def mark_start(stage_id):
        update_stage_dates(stage_id, start=str(date.today()))
        load_stages()

    def mark_finish(stage_id):
        update_stage_dates(stage_id, finish=str(date.today()))
        load_stages()

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∏–ø–æ–≤ —Ä–∞–±–æ—Ç
    work_type_dropdown.options = [
        ft.dropdown.Option(key=str(wt["id"]), text=wt["name"])
        for wt in get_work_types()
    ]

    machine_dropdown.options = [
        ft.dropdown.Option(key=str(m["id"]), text=m["name"])
        for m in get_machines_by_work_type(selected_work_type)
    ]

    work_type_dropdown.on_change = on_work_type_change
    # machine_dropdown.disabled = (selected_work_type is None)
    machine_dropdown.on_change = on_machine_change


    page.add(
        ft.Text("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", size=24),
        work_type_dropdown,
        machine_dropdown,
        ft.Divider(),
        stage_list
    )

ft.app(target=main, view=ft.WEB_BROWSER, port=8550)