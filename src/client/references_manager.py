"""
–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è ADITIM Monitor Client
–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫ –Ω–∏–º –¥–æ—Å—Ç—É–ø
"""

from typing import Dict, List, Any, Optional
from .api_client import ApiClient


class ReferencesManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —Å –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    
    _instance = None  # Singleton pattern
    
    def __new__(cls):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance._initialized = False
        return cls._instance
    
    def __init__(self):
        if self._initialized:
            return
            
        self.api_client = None
        
        # –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
        self._departments = {}          # {id: name}
        self._profiles = {}             # {id: {article, description, sketch}}
        self._component_types = {}      # {id: {name, description}}
        self._profile_dimensions = {}   # {profile_id: [dimensions]}
        self._statuses = {}            # {id: name} - —Å—Ç–∞—Ç—É—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        
        # –§–ª–∞–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        self._departments_loaded = False
        self._profiles_loaded = False
        self._component_types_loaded = False
        self._statuses_loaded = False
        
        self._initialized = True
    
    def set_api_client(self, api_client: ApiClient):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç API –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
        self.api_client = api_client
    
    async def load_all_references(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ"""
        if not self.api_client:
            raise RuntimeError("API –∫–ª–∏–µ–Ω—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            await self._load_departments()
            await self._load_profiles()
            await self._load_component_types()
            await self._load_statuses()
            
            print("‚úÖ –í—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: {e}")
            raise
    
    def load_all_references_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤"""
        if not self.api_client:
            raise RuntimeError("API –∫–ª–∏–µ–Ω—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
            self._load_departments_sync()
            self._load_profiles_sync()
            self._load_component_types_sync()
            self._load_statuses_sync()
            
            print("‚úÖ –í—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: {e}")
            raise
    
    async def _load_departments(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤"""
        try:
            departments = self.api_client.get_departments()
            self._departments = {dept['id']: dept['name'] for dept in departments}
            self._departments_loaded = True
            print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: {len(self._departments)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: {e}")
            raise
    
    def _load_departments_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤"""
        try:
            departments = self.api_client.get_departments()
            self._departments = {dept['id']: dept['name'] for dept in departments}
            self._departments_loaded = True
            print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: {len(self._departments)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: {e}")
            raise
    
    async def _load_profiles(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        try:
            profiles = self.api_client.get_profiles()
            self._profiles = {
                profile['id']: {
                    'article': profile['article'],
                    'description': profile.get('description', ''),
                    'sketch': profile.get('sketch')
                } 
                for profile in profiles
            }
            self._profiles_loaded = True
            print(f"üîß –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(self._profiles)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")
            raise
    
    def _load_profiles_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        try:
            profiles = self.api_client.get_profiles()
            self._profiles = {
                profile['id']: {
                    'article': profile['article'],
                    'description': profile.get('description', ''),
                    'sketch': profile.get('sketch')
                } 
                for profile in profiles
            }
            self._profiles_loaded = True
            print(f"üîß –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(self._profiles)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")
            raise
    
    async def _load_component_types(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        try:
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ get_component_types
            component_types = self.api_client.get_component_types()
            self._component_types = {
                comp_type['id']: {
                    'name': comp_type['name'],
                    'description': comp_type.get('description', '')
                }
                for comp_type in component_types
            }
            self._component_types_loaded = True
            print(f"‚öôÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(self._component_types)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
            # –ï—Å–ª–∏ –º–µ—Ç–æ–¥–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            self._component_types = {
                1: {'name': '–ù–æ–∂', 'description': '–†–µ–∂—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                2: {'name': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è', 'description': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                3: {'name': '–ö–∞–ª–∏–±—Ä', 'description': '–ö–∞–ª–∏–±—Ä—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                4: {'name': '–ü–ª–∏—Ç–∞ —Ñ–æ—Ä–º—É—é—â–∞—è', 'description': '–§–æ—Ä–º—É—é—â–∞—è –ø–ª–∏—Ç–∞'},
                5: {'name': '–ü–ª–∏—Ç–∞ –ø—Ä–∏–∂–∏–º–Ω–∞—è', 'description': '–ü—Ä–∏–∂–∏–º–Ω–∞—è –ø–ª–∏—Ç–∞'},
                6: {'name': '–í—Ç—É–ª–∫–∞', 'description': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è –≤—Ç—É–ª–∫–∞'},
                7: {'name': '–ë–æ–ª—Ç –∫—Ä–µ–ø–µ–∂–Ω—ã–π', 'description': '–ö—Ä–µ–ø–µ–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç'},
            }
            self._component_types_loaded = True
    
    def _load_component_types_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        try:
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ get_component_types
            component_types = self.api_client.get_component_types()
            self._component_types = {
                comp_type['id']: {
                    'name': comp_type['name'],
                    'description': comp_type.get('description', '')
                }
                for comp_type in component_types
            }
            self._component_types_loaded = True
            print(f"‚öôÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(self._component_types)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
            # –ï—Å–ª–∏ –º–µ—Ç–æ–¥–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            self._component_types = {
                1: {'name': '–ù–æ–∂', 'description': '–†–µ–∂—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                2: {'name': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è', 'description': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                3: {'name': '–ö–∞–ª–∏–±—Ä', 'description': '–ö–∞–ª–∏–±—Ä—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç'},
                4: {'name': '–ü–ª–∏—Ç–∞ —Ñ–æ—Ä–º—É—é—â–∞—è', 'description': '–§–æ—Ä–º—É—é—â–∞—è –ø–ª–∏—Ç–∞'},
                5: {'name': '–ü–ª–∏—Ç–∞ –ø—Ä–∏–∂–∏–º–Ω–∞—è', 'description': '–ü—Ä–∏–∂–∏–º–Ω–∞—è –ø–ª–∏—Ç–∞'},
                6: {'name': '–í—Ç—É–ª–∫–∞', 'description': '–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è –≤—Ç—É–ª–∫–∞'},
                7: {'name': '–ë–æ–ª—Ç –∫—Ä–µ–ø–µ–∂–Ω—ã–π', 'description': '–ö—Ä–µ–ø–µ–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç'},
            }
            self._component_types_loaded = True
    
    async def _load_statuses(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤"""
        try:
            # –ü–æ–∫–∞ —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤
            self._statuses = {
                1: '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
                2: '–ì–æ—Ç–æ–≤–æ',
                3: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
                4: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
                5: '–í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ'
            }
            self._statuses_loaded = True
            print(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–æ–≤: {len(self._statuses)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
            raise
    
    def _load_statuses_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤"""
        try:
            # –ü–æ–∫–∞ —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤
            self._statuses = {
                1: '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
                2: '–ì–æ—Ç–æ–≤–æ',
                3: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
                4: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
                5: '–í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ'
            }
            self._statuses_loaded = True
            print(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–æ–≤: {len(self._statuses)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
            raise
    
    def load_profile_dimensions(self, profile_id: int) -> List[str]:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)"""
        if profile_id in self._profile_dimensions:
            return self._profile_dimensions[profile_id]
        
        try:
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ get_profile_dimensions
            dimensions = self.api_client.get_profile_dimensions(profile_id)
            self._profile_dimensions[profile_id] = dimensions
            return dimensions
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {profile_id}: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            default_dimensions = ['40x20', '50x30', '60x40', '25x15']
            self._profile_dimensions[profile_id] = default_dimensions
            return default_dimensions
    
    # –ú–µ—Ç–æ–¥—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º
    
    def get_departments(self) -> Dict[int, str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤"""
        if not self._departments_loaded:
            print("‚ö†Ô∏è –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return {}
        return self._departments.copy()
    
    def get_department_name(self, dept_id: int) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –ø–æ ID"""
        return self._departments.get(dept_id, f"ID: {dept_id}")
    
    def get_profiles(self) -> Dict[int, Dict[str, Any]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        if not self._profiles_loaded:
            print("‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return {}
        return self._profiles.copy()
    
    def get_profile(self, profile_id: int) -> Optional[Dict[str, Any]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        return self._profiles.get(profile_id)
    
    def search_profiles(self, query: str) -> List[Dict[str, Any]]:
        """–ü–æ–∏—Å–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é"""
        if not self._profiles_loaded:
            return []
        
        query = query.lower()
        results = []
        
        for profile_id, profile_data in self._profiles.items():
            if (query in profile_data['article'].lower() or 
                query in profile_data.get('description', '').lower()):
                results.append({
                    'id': profile_id,
                    **profile_data
                })
        
        return results
    
    def get_component_types(self) -> Dict[int, Dict[str, str]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        if not self._component_types_loaded:
            print("‚ö†Ô∏è –¢–∏–ø—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return {}
        return self._component_types.copy()
    
    def get_component_type_name(self, type_id: int) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ ID"""
        component_type = self._component_types.get(type_id, {})
        return component_type.get('name', f"ID: {type_id}")
    
    def get_statuses(self) -> Dict[int, str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤"""
        if not self._statuses_loaded:
            print("‚ö†Ô∏è –°—Ç–∞—Ç—É—Å—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return {}
        return self._statuses.copy()
    
    def get_default_status_id(self) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å—Ç–∞—Ç—É—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')"""
        for status_id, status_name in self._statuses.items():
            if status_name == '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ':
                return status_id
        return 1  # Fallback
    
    def refresh_references(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤"""
        self._departments_loaded = False
        self._profiles_loaded = False
        self._component_types_loaded = False
        self._statuses_loaded = False
        self._profile_dimensions.clear()
        
        self.load_all_references_sync()


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
references_manager = ReferencesManager()
